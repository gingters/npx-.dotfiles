[alias]
	co = checkout
	s = status
	f = fetch
	slog = !"git --no-pager log -n \"$1\" --oneline #"

	adog = log --all --decorate --oneline --graph

	blg = "!f() { \
		cmd=\"git log --oneline --graph\"; \
		for p in $@; \
		do \
			cmd+=\" --branches=*$p*\"; \
			cmd+=\" --remotes=*$p*\"; \
			cmd+=\" --decorate-refs=*$p*\"; \
		done; \
		$cmd; \
	}; f"

	lg = !"git lg0"
	lg0 = !"git lg0-specific --all"
	lg1 = !"git lg1-specific --all"
	lg2 = !"git lg2-specific --all"
	lg3 = !"git lg3-specific --all"

	lg0-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(auto)%s%C(reset) %C(auto)%d%C(reset)'
	lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(auto)%s%C(reset) %C(dim normal)- %an%C(reset)%C(auto)%d%C(reset)'
	lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(normal)%s%C(reset) %C(dim normal)- %an%C(reset)'
	lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(normal)%s%C(reset)%n''          %C(dim normal)- %an <%ae> %C(reset) %C(dim normal)(committer: %cn <%ce>)%C(reset)'

	nuke = !sh -c 'git branch -D $1 && git push origin :$1' -

	trim = !"git remote prune origin"

	tidy = !"git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D"

	recommit = !"git commit --amend --no-edit"

	uncommit = !"git reset --soft HEAD^"

	punch = !"git push --force"

	empty = !sh -c 'find . -path ./.git -prune -o -exec rm -rf {} + 2> /dev/null'

	sync = !sh -c "git fetch origin $1:$1"

	open = checkout -b
	close = !sh -c 'git merge $1 --no-ff --no-edit && git branch -d $1' -
	change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch --env-filter \"if [[ \\\"$`echo $VAR`\\\" = '$OLD' ]]; then export $VAR='$NEW'; fi\" $@; }; f "

	prox = !"git config --global http.proxy http://$1.shared:8888"
	proxoff = config --global --unset http.proxy
[url "git@bitbucket.org-npxdu:npxdu/"]
	insteadOf = https://bitbucket.org/npxdu/
[pager]
	branch = false
[pull]
	ff = only
[init]
	defaultBranch = main
